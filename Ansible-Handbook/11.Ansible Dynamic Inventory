> Generally Dynamic Inventories are scripts like shell/pyhthon for dynamic environments.
> Cloud Dynamic Environment.
> Ansible has Dynamic Inventory scripts below environments:
AWS EC2
OpenStack
Google Compute Engine
Space Walk
Jails etc...

Download the sci.ini and sci.py default dynamic inventory file from ansible documentation
Create the IAM Role with full ec2 access to the Ansible Machine ec2 instance.
$ pip! install boto3       // To run the ec2.py boto3 packages are needed
$./ec2.py
$ ansible -i ec2.py ec2 -m ping
$ ansible -i ec2.py us-east-1a -m ping

You can even create the AMI of the managment node which will reflect the ssh key configured in the previous amanged node hows image we have taken
$./ec2.py
$ ansible -i ec2.py ec2 -m ping
$ ansible -i ec2.py us-east-1a -m ping

***** To create a Custom Dynamic Inventory Script for Ansible*****

$ vi aws_dynamic_inv.py         // Custom dynamic inventory script
------------------------------------------------------------------------
#!/bin/python
import sys
try:
  import boto3            // install boto3 
except Exception as e:    // handle the exception 
  print(e)
  print("please rectify above exception and then try agian")
  sys.exit(1)

def get_hosts(ec2_ob,fv):
  f={"Name":"tag":Env , "Value": [fv]}
  hosts=[]
  for each_in in ec2_ob.instances.filter(Filters-[f]):
     #print(each_in.private_ip_address)
      hosts.append(each_in.private_ip_address)
   return hosts
def main():
  ec2_ob=boto3.resourse("ec2","us-east-1")
  db_group=get_hosts(ec2_ob,'db')
  app_group=get_hosts(ec2_ob,'app')
  all_groups={ 'db': db_group, 'app': app_group }
  print(json.dumps(all_groups))
  return None
 

if __name__=="__main__":
   main()


:wq
------------------------------------------------------------------------
$ chmod +x aws_dynamic_inv.py   // Provide the execution permission 
$ ./aws_dynamic_inv.py          // Execute the created dynamic inventory 
provide the IAM role to access the full EC2 for the ansible engine
$ ansible -i aws_dynamic_inv.py db --list-hosts      // tags provided with 'db' as a managed node are given output
$ ansible -i aws_dynamic_inv.py app --list-hosts    //tags provided with 'app' as a managed node are given output 
$ ansible -i aws_dynamic_inv.py app ping
$ ansible -i aws_dynamic_inv.py db ping
$ ansible -i aws_dynamic_inv.py all ping           // This should run all the static and dynamic inventory both in the single command
